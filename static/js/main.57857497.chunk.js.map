{"version":3,"sources":["logo.svg","components/boxes.js","components/comments.js","components/multipage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Boxes","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","colors","handle_box","bind","assertThisInitialized","event","nextColor","indexOf","target","style","backgroundColor","toLowerCase","length","all_boxes","document","getElementsByClassName","main","i","react_default","a","createElement","className","onClick","color","React","Component","CommentSystem","comments","handle_post","push","TextField_default","defaultValue","type","Button_default","Multipage","react_router_dom","to","react_router","exact","path","component","Home","About","Post","src","alt","boxes_Boxes","comments_CommentSystem","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57857497.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class Boxes extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handle_box = this.handle_box.bind(this);\r\n\t}\r\n\r\n\tcolors = [\r\n\t\t\"red\",\r\n\t\t\"blue\",\r\n\t\t\"green\"\r\n\t];\r\n\r\n\thandle_box(event) {\r\n\r\n\t\tlet nextColor = this.colors.indexOf(event.target.style.backgroundColor.toLowerCase()) + 1;\r\n\r\n\t\tif (nextColor === this.colors.length) {\r\n\t\t\tnextColor = 0;\r\n\t\t}\r\n\r\n\t\tevent.target.style.backgroundColor = this.colors[nextColor];\r\n\r\n\t\tlet all_boxes = document.getElementsByClassName(\"Box\");\r\n\r\n\t\tvar main = document.getElementsByClassName(\"App-header\")[0];\r\n\r\n\t\tvar same_color = true;\r\n\r\n\t\tfor (var i = 0; i < all_boxes.length; i++) {\r\n\t\t\tvar box = all_boxes[i];\r\n\r\n\t\t\tsame_color = box.style.backgroundColor.toLowerCase() === this.colors[nextColor];\r\n\t\t\tif (same_color === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmain.style.backgroundColor = this.colors[nextColor];\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundColor: \"white\" }}>\r\n\t\t\t\t<div className=\"Box\" onClick={this.handle_box} style={{ backgroundColor: this.props.color }}></div>\r\n\t\t\t\t<div className=\"Box\" onClick={this.handle_box} style={{ backgroundColor: this.props.color }}></div>\r\n\t\t\t\t<div className=\"Box\" onClick={this.handle_box} style={{ backgroundColor: this.props.color }}></div>\r\n\t\t\t\t<div className=\"Box\" onClick={this.handle_box} style={{ backgroundColor: this.props.color }}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport default class CommentSystem extends React.Component {\r\n\r\n\tcomments = [];\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handle_post = this.handle_post.bind(this);\r\n\r\n\t}\r\n\r\n\thandle_post(event) {\r\n\t\tvar comment = document.getElementsByClassName(\"comment\")[0];\r\n\t\tthis.comments.push(<div>comment.textContent</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"comments\">\r\n\t\t\t\t\t{this.comments}\r\n\t\t\t\t</div>\r\n\t\t\t\t<TextField className=\"comment\" defaultValue=\"Make a comment here\" type=\"text\" />\r\n\t\t\t\t<Button onClick={this.handle_post}>Post</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Boxes from \"./boxes\";\r\nimport CommentSystem from \"./comments\";\r\n\r\n\r\nexport default function Multipage() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/about\">About</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/post\">Post</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<hr />\r\n\r\n\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t<Route path=\"/about\" component={About} />\r\n\t\t\t\t<Route path=\"/post\" component={Post} />\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Home</h2>\r\n\t\t\t<img src=\"img/meme.jpg\" alt=\"A meme\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction About() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>About</h2>\r\n\t\t\t<Boxes color=\"red\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Post() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Post</h2>\r\n\t\t\t<CommentSystem/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Multipage from './components/multipage'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\t\t\t<Multipage/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}